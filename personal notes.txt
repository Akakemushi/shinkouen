Notes for the Shinkoen Website and general learning from the experience.

Models recommended for setting up an online shop are:
1. the product model (teapot)
2. the cart model (temporary storage for items, does not get saved in db)
3. the order model (just like cart model, but only created once checkout is confirmed, saved in db, joins a user to a group of line items)
4. the "Line Item" model (join table for items and orders, saved in db)
5. the category model (maybe optional? used to organize items better somehow...come back later)
6. the user model (self explanatory, but can include an "annoymous" function to handle those without accounts)
7. the review model (self explanatory)

Pagy Installation
first you need the gem, then you need to follow some installation steps (which I forgot)
right now I'm troubleshooting...
First you need to include the line "include Pagy::Frontend" in the relevant "helper" module.
also, I seem to require two files, pagy.js and pagy.css, which I had to manually create inside the app/javascript  and app/assets/stylesheets folders respectively... the files are blank, but that's ok I guess?

Money Installation Notes
When making a shopping site, you will typically need both the "money" and "money-rails" gems.  Not sure of the details, but "money" seems to provide
core functionality, while "money-rails" adds some other features.  It also seems (according to AI) that if you add "money-rails" that "money" will also
get installed because the former depends on the latter to function.
Once you bundle those gems, activate them with this line...    rails g money_rails:initializer
I should also note that you should NOT add a "price" column to the table in the beginning.  Wait until AFTER you have the gem installed, and then use
the gem version of the "price" column instead.  Otherwise it's a hassle to undo the previous and redo a new one. (trust old me)
Another thing about this system.  In the schema, you'll see "price_cents", and maybe something "currency", yet in the view's .erb file, you will
reference these by doing teapot.price   WITHOUT the _cents.  This is something that the gem is handling.  It returns a money object instead of a
straight integer.

Stripe Payment System Notes
First you'll need to create an account that will be linked to the payments.  It needs a name and an email.  From that you'll get .env keys.
Next get the "stripe" gem and bundle install.       Next put this in the initializer file
Rails.configuration.stripe = {
  publishable_key: ENV['STRIPE_PUBLISHABLE_KEY'],
  secret_key:      ENV['STRIPE_SECRET_KEY']
}

Stripe.api_key = Rails.configuration.stripe[:secret_key]

picture filename are CaSe SenSiTive!  Even the .suffix!  .PNG does NOT equal .PNG

==============Q U I C K   L O O K U P S======================
- gco -b name     to create a new branch.  Need the -b for a new one.

==============P  R  O  B  L  E  M  S===================


ISSUE: new SCSS files stop working even after hard refreshing, styles aren't applied at all.
FIXED: try closing the server and running     rails assets:clobber     in the cli, then restart the server.

ISSUE:  Money.new(teapot.price, "JPY").format   seems to return a string, however when I try to modify the array, I can't save a string to an integer field.  It reads as a zero when displayed
FIXED:  Altered the MODEL by adding a method which returns the formated string version of its own price.

ISSUE:  Getting rid of the lame underlines on hyperlinks
FIXED: You need to set text-decoration: none; on NOT ONLY the tag, but also its variants  a:visited   a:link   a:hover    a:active

ISSUE:  <p> elements that are children (not even direct children) of a wrapping link are being styled/decorated like links.
FIXED:  I changed the root design of <a> and <p> tags in the main stylesheet. That seemed to overwrite the problem.

ISSUE:  Trying to implement a fading carousel for the index page, but having lots of issues.  Currently working on "carousel" branch.  GPT says use
    Jquery, but I can't seem to get that to work?  browser console doesn't recognize the $ needed in Jquery.
FIXED:  To install Jquery in Rails 7, first you need the gem "jquery-rails", then you need to put this line in the "importmap.rb" file...
     pin "jquery", to: "https://code.jquery.com/jquery-3.6.0.min.js" (you can find the file in the config folder), and finally, you need to put
     import "jquery"    in the .js files that will use jquery.  (i think that's all the steps, in your main .erb file, <%= javascript_importmap_tags %>
     should already be there by default)

ISSUE:  I have a bunch of stuff inside of a div, including a carousel, however the carousel is not included within the div's boundaries for some reason.
FIXED:  My fault.  I had one of the children divs set specifically to height 500px, and the carousel was INSIDE that one.  Getting rid of the 500px limit fixed it.

ISSUE:  Not sure where to register the Stimulus Controller... there are TWO files called application.js
FIXED:  In Rails 7, it's the one INSIDE the Controllers folder.  Add an "import" statement right under the "import {application} line, and
        add a line      Stimulus.register("teapot-slides", TeapotSlidesController); AFTER this stuff --> const application = Application.start(); application.debug = false; window.Stimulus   = application;

ISSUE:  Was getting an error in the browser console "TypeError: Failed to resolve module specifier "stimulus". Relative references must start with either "/", "./", or "../".
FIXED:  Caused by a controller file I made, at the top I had simply "stimulus", but I needed "@hotwired/stimulus"

ISSUE:


Tousan Notes
If priced over, 5man over, show more photos
photos should automatically rotate

many photos with only picture, price, and artist
each picture should automatically switch when hovered over,
at least 3 photos,
one is from the Frontend
one is with the lid open
one is the maker's maker


old index html code--------
<div class="all-teapots-container">
      <% @teapots.each do |teapot| %>
        <div class="teapot-card">
          <div class="card-picture">
            <%= cl_image_tag(teapot.images.first.key, width: 300, height: 300, crop: :fill) %>
          </div>
          <div class="card-info-container">
            <div class="visual-info-boxes-container">
              <div class="dimension-box">
                <%= image_tag "dimensions.png" %>
                <p class="teapot-height-text"><%= teapot.height / 10.to_f %> cm</p>
                <p class="teapot-width-text"><%= teapot.width / 10.to_f %> cm</p>
                <p class="teapot-depth-text"><%= teapot.depth / 10.to_f %> cm</p>
              </div>
              <div class="capacity-box"><%= image_tag "capacity.png" %>
                <p class="teapot-ccs-text"><%= teapot.ccs %> cc</p>
              </div>
              <div class="weight-box"><%= image_tag "weight.png" %>
                <p class="teapot-weight-text"><%= teapot.weight %> g</p>
              </div>
            </div>
            <div class="teapot-info-lower-half">
              <div class="text-only-info-container">
                <p class="teapot-price-text"><%= teapot.formatted_price %></p>
                <p class="teapot-maker-text">Artist:   <strong><%= teapot.maker %></strong></p>
              </div>
              <%= link_to "View Details", teapot_path(teapot), class: "teapot-link" %>
            </div>
          </div>
        </div>
      <% end %>
      <h2 class="paginator"><%= pagy_nav(@pagy).html_safe %></h2>
    </div>
    END OF OLD HTML CODE -----------

    NOTES ABOUT HOW STRIPE WORKS
    -Stripe uses 2 things, "Products" and "Prices".
    -When starting out, you seem to need to import you catalog of products into Stripe.  The introduction
    given doesn't state directly that this is necessary, however it strongly aludes to that being the case.
    -There is something called a "multi-currency Price" that handles the same product sold in different currencies.
    -Products created in test mode can be copied over to live mode via the dashboard.  Be aware though that if you later make changes to the test mode
    version, those changes will NOT be reflected in the Live version.

    Questions for Stripe devs
    -If I do not create a multi-currency Price and just sell everything in Yen, what happens if someone orders from overseas and tries to pay in dollars?
    -Is it possible to use Stripe just for payments, and handle the products and shopping cart on my end? Is it possible to use the payment form they have
    in that case, or do I need to use their catalog system for that?
    
